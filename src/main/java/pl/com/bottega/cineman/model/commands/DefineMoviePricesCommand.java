package pl.com.bottega.cineman.model.commands;import java.math.BigDecimal;import java.util.Map;public class DefineMoviePricesCommand implements Validatable {	private Long movieId;	private Map<String, BigDecimal> prices;	public DefineMoviePricesCommand() {	}	public Map<String, BigDecimal> getPrices() {		return prices;	}	public void setPrices(Map<String, BigDecimal> prices) {		this.prices = prices;	}	public void setMovieId(Long movieId) {		this.movieId = movieId;	}	public Long getMovieId() {		return movieId;	}	@Override	public void validate(ValidationErrors errors) {		validateMovieId(errors);		validatePrices(errors);	}	private void validatePrices(ValidationErrors errors) {		if (prices == null) {			errors.add("prices", REQUIRED_FIELD);			return;		}		if (!prices.containsKey("regular"))			errors.add("kind", "regular price is required");		if (!prices.containsKey("student"))			errors.add("kind", "student price is required");		for (BigDecimal price : prices.values())			validatePrice(errors, price);	}	private void validatePrice(ValidationErrors errors, BigDecimal price) {		if (price.compareTo(BigDecimal.ZERO) < 0)			errors.add("prices", POSITIVE_OR_ZERO_REQUIRED);	}	private void validateMovieId(ValidationErrors errors) {		if (movieId == null)			errors.add("movieId", "is a required parameter and can not be blank");	}}